@page
@using FAiSEBussiness.Models
@model FAiSEAdmin.Pages.Blogs.IndexModel

@{
    ViewData["Title"] = "Quản lý Chuyên mục";
}
<header class="panel-heading">
    Quản lý Chuyên mục
    <div class="pull-right">
        <a asp-page="Create" class="btn btn-primary fa fa-plus-square-o"> Tạo mới</a>
    </div>
</header>
<div class="panel-body">
    <div class="text-align">
        @{
            if (TempData["AlertMessage"] != null)
            {
                <div id="alertBox" class="alert @TempData["Type"]">
                    @TempData["AlertMessage"]
                </div>
            }
        }
    </div>
    <div class="row form-body">
        <div class="form-group">
            <div class="row">
                <div id="loadingIndicator" class="processing-preview hidden">
                    <i class="fa fa-spinner fa-spin fa-3x text-primary"></i>
                    <p>Đang tải...</p>
                </div>
                <form method="get" class="d-flex">
                    <div class="col-lg-6">
                        <input type="text" asp-for="SearchTerm" class="form-control me-2" placeholder="Tìm kiếm tiêu đề">
                    </div>
                    <div class="col-lg-2">
                        <select id="parentCategory" asp-for="ParentCategoryId" class="form-control">
                            <option value="">-- Chọn danh mục cha --</option>
                            @foreach (var category in Model.ParentCategories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="col-lg-2">
                        <select id="childCategory" asp-for="SelectedCategoryId" class="form-control">
                            <option value="">-- Chọn danh mục con --</option>
                            @if (Model.ChildCategories != null && Model.ChildCategories.Any())
                            {
                                @foreach (var category in Model.ChildCategories)
                                {
                                    <option value="@category.CategoryId"
                                            selected="@(category.CategoryId == Model.SelectedCategoryId ? "selected" : null)">
                                        @category.CategoryName
                                    </option>
                                }
                            }
                        </select>
                    </div>
                    <input type="submit" class="btn btn-primary" value="Tìm kiếm" onclick="return DisplayProgressMessage(this, 'Đang tìm kiếm...');" />
                </form>
            </div>
        </div>

        <div class="form-group" style="clear:both">&nbsp;</div>
        <div class="form-group">
            @if (!Model.Blog.Any())
            {
                <p class="text-danger">Không có kết quả cho từ khoá "@Model.SearchTerm".</p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Tiêu đề bài viết
                            </th>
                            <th>
                                Ảnh đại diện
                            </th>
                            <th>
                                Tóm Tắt
                            </th>
                            <th>
                                Danh mục
                            </th>
                            <th>
                                Ngày cập nhật
                            </th>
                            <th>
                                Người đăng
                            </th>
                            <th>
                                Trạng thái
                            </th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Blog)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td align="center">
                                    <img src="@(string.IsNullOrEmpty(item.Avatar) ? "/images/avatar1.jpg" : item.Avatar)" style="width:40px; height:40px; border-radius: 50%" />
                                </td>
                                <td>
                                    @Html.Raw(item.Summary)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateUpdated)
                                </td>
                                <td align="center">
                                    <a href="#" class="toggle-status" data-id="@item.CategoryId" data-field="Status">
                                        <i class="fa @(item.Status ? "fa-check-circle text-success" : "fa-times-circle text-danger")"></i>
                                    </a>
                                </td>
                                <td>
                                    @Model.GetCategoryHierarchy(item.Category)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                </td>

                                <td align="center">
                                    <a asp-page="./Edit" class="btn btn-warning" asp-route-id="@item.Id">Sửa</a>&nbsp;
                                    <a href="#" class="btn btn-danger delete-btn" data-id="@item.Id">Xoá</a>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-page-handler="OnGetAsync"
                               asp-route-ParentCategoryId="@Model.ParentCategoryId"
                               asp-route-SelectedCategoryId="@Model.SelectedCategoryId"
                               asp-route-SearchTerm="@Model.SearchTerm"
                               asp-route-pageNumber="@(Model.CurrentPage - 1)"
                               
                               aria-label="Previous">
                                Lùi
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                   asp-page-handler="OnGetAsync"
                                   asp-route-ParentCategoryId="@Model.ParentCategoryId"
                                   asp-route-SelectedCategoryId="@Model.SelectedCategoryId"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   asp-route-pageNumber="@i"
                                  >
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-page-handler="OnGetAsync"
                               asp-route-ParentCategoryId="@Model.ParentCategoryId"
                               asp-route-SelectedCategoryId="@Model.SelectedCategoryId"
                               asp-route-SearchTerm="@Model.SearchTerm"
                               asp-route-pageNumber="@(Model.CurrentPage + 1)"
                              
                               aria-label="Next">
                                Tiến
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <script>
        Swal.fire({
            icon: "success",
            title: "Thành công!",
            text: "@TempData["SuccessMessage"]"
        });
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <script>
        Swal.fire({
            icon: "error",
            title: "Lỗi!",
            text: "@TempData["ErrorMessage"]"
        });
    </script>
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            function showLoading() {
                $("#loadingIndicator").removeClass("hidden"); // Hiển thị loading
            }

            function hideLoading() {
                $("#loadingIndicator").addClass("hidden"); // Ẩn loading
            }
            $("#parentCategory").change(function () {
                showLoading(); // Hiển thị loading
                var parentId = $(this).val();
                $("#childCategory").html('<option value="">-- Chọn danh mục con --</option>');

                if (parentId) {
                    $.ajax({
                        url: '/Blogs/Index?handler=ChildCategories',
                        type: 'GET',
                        data: { parentId: parentId },
                        success: function (data) {
                            if (data.length > 0) {
                                $.each(data, function (index, item) {
                                    $("#childCategory").append($('<option>', {
                                        value: item.categoryId,
                                        text: item.categoryName
                                    }));
                                });
                            }
                        }
                    });
                }
                // Tự động gửi form tìm kiếm khi chọn danh mục cha
                $("form").submit();
            });

            // Cập nhật danh mục khi chọn
            $("#childCategory, #parentCategory").change(function () {
                showLoading(); // Hiển thị loading khi chọn danh mục con
                var childId = $("#childCategory").val();
                var parentId = $("#parentCategory").val();

                if (childId) {
                    $("#SelectedCategoryId").val(childId); // Nếu có danh mục con, lấy ID của con
                } else {
                    $("#SelectedCategoryId").val(parentId); // Nếu không có danh mục con, lấy ID của cha
                }
                // Tự động gửi form tìm kiếm khi chọn danh mục con
                $("form").submit();
            });
            
        });
    </script>
    <script>
        $(function () {
            $('#alertBox').removeClass('hide');
            $('#alertBox').delay(5000).slideUp(500);
        });
    </script>
    <script src="~/js/crud.js"></script>

}